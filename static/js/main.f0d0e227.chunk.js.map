{"version":3,"sources":["components/TodoList/TodoList.tsx","store/index.ts","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["Show","TODOS_LOADING","USER_LOADING","SELECT_USER_ID","DELETE_TODO","todosLoading","todos","type","userLoading","user","selectUserId","selectedUserId","getTodosSelector","state","getUserSelector","getUserIdSelector","initialState","store","createStore","action","filter","todo","id","deleteTodoId","composeWithDevTools","TodoList","useSelector","selctedUser","useState","query","setQuery","showTodos","setShowTodos","visibleTodos","Active","completed","Completed","All","show","title","toLowerCase","includes","dispatch","useDispatch","className","value","onChange","event","target","map","classNames","TodoList__item","checked","readOnly","onClick","userId","URL","getTodos","a","fetch","response","json","getUser","CurrentUser","useEffect","userFromServer","name","email","phone","App","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0d0e227.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteTodo,\n  getTodosSelector,\n  getUserIdSelector,\n  selectUserId,\n} from '../../store';\n\nenum Show {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\nexport const TodoList: React.FC = () => {\n  const todos = useSelector(getTodosSelector);\n  const selctedUser = useSelector(getUserIdSelector);\n  const [query, setQuery] = useState('');\n  const [showTodos, setShowTodos] = useState('');\n\n  const show = () => {\n    switch (showTodos) {\n      case Show.Active:\n        return todos.filter(todo => !todo.completed);\n      case Show.Completed:\n        return todos.filter(todo => todo.completed);\n      case Show.All:\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = show()\n    .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        data-cy=\"filterByTitle\"\n        type=\"text\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n\n      <select\n        value={showTodos}\n        onChange={(event) => setShowTodos(event.target.value)}\n      >\n        <option value={Show.All}>All</option>\n        <option value={Show.Active}>Active</option>\n        <option value={Show.Completed}>Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul data-cy=\"listOfTodos\" className=\"TodoList__list\">\n          {visibleTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames({\n                TodoList__item: true,\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <div>\n                <button\n                  data-cy=\"userButton\"\n                  onClick={() => dispatch(selectUserId(todo.userId))}\n                  className={classNames({\n                    'TodoList__user-button button': true,\n                    'TodoList__user-button--selected': todo.userId\n                      === selctedUser,\n                  })}\n                  type=\"button\"\n                >\n                  {`User #${todo.userId}`}\n                </button>\n                {' '}\n                <button\n                  onClick={() => dispatch(deleteTodo(todo.id))}\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst TODOS_LOADING = 'TODOS_LOADING';\nconst USER_LOADING = 'USER_LOADING';\nconst SELECT_USER_ID = 'SELECT_USER_ID';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const todosLoading = (todos: Todo[]) => ({\n  type: TODOS_LOADING,\n  todos,\n});\n\nexport const userLoading = (user: User | null) => ({\n  type: USER_LOADING,\n  user,\n});\n\nexport const selectUserId = (selectedUserId: number) => ({\n  type: SELECT_USER_ID,\n  selectedUserId,\n});\n\nexport const deleteTodo = (deleteTodoId: number) => ({\n  type: DELETE_TODO,\n  deleteTodoId,\n});\n\nexport const getTodosSelector = (state: RootState) => state.todos;\nexport const getUserSelector = (state: RootState) => state.user;\nexport const getUserIdSelector = (state: RootState) => state.selectedUserId;\n\nexport type RootState = {\n  todos: Todo[];\n  user: User | null;\n  selectedUserId: number;\n};\n\nconst initialState: RootState = {\n  todos: [],\n  user: null,\n  selectedUserId: 0,\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case TODOS_LOADING: {\n      return {\n        ...state,\n        todos: [...action.todos],\n      };\n    }\n\n    case USER_LOADING: {\n      return {\n        ...state,\n        user: action.user,\n      };\n    }\n\n    case SELECT_USER_ID: {\n      return {\n        ...state,\n        selectedUserId: action.selectedUserId,\n      };\n    }\n\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.deleteTodoId),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const URL = 'https://mate.academy/students-api';\n\nexport async function getTodos() {\n  const response = await fetch(`${URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(userId: number) {\n  const response = await fetch(`${URL}/users/${userId}`);\n\n  return response.json();\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../api';\nimport {\n  getUserIdSelector,\n  getUserSelector,\n  selectUserId,\n  userLoading,\n} from '../../store';\nimport './CurrentUser.scss';\n\nexport const CurrentUser: React.FC = () => {\n  const user = useSelector(getUserSelector);\n  const userId = useSelector(getUserIdSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userFromServer = async () => {\n      dispatch(userLoading(await getUser(userId)));\n    };\n\n    userFromServer();\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${userId}`}</span></h2>\n\n      <h3 data-cy=\"userName\" className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      <button\n        onClick={() => dispatch(selectUserId(0))}\n        type=\"button\"\n        className=\"CurrentUser__clear button\"\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\nimport { getUserIdSelector, todosLoading } from './store';\n\nconst App: React.FC = () => {\n  const selectedUserId = useSelector(getUserIdSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const todosFromServer = async () => {\n      dispatch(todosLoading(await getTodos()));\n    };\n\n    todosFromServer();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}