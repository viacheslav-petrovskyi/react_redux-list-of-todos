{"version":3,"sources":["components/TodoList/TodoList.tsx","store/index.ts","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["Show","TODOS_LOADING","USER_LOADING","SELECT_USER_ID","DELETE_TODO","getTodosSelector","state","todos","getUserSelector","user","getUserIdSelector","selectedUserId","initialState","store","createStore","action","type","filter","todo","id","deleteTodoId","composeWithDevTools","TodoList","selctedUser","useState","query","setQuery","showTodos","setShowTodos","visibleTodos","Active","completed","Completed","All","show","title","toLowerCase","includes","dispatch","useDispatch","className","value","onChange","event","target","map","classNames","TodoList__item","checked","readOnly","onClick","userId","URL","getTodos","a","fetch","response","json","getUser","CurrentUser","useSelector","useEffect","userFromServer","name","email","phone","App","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd3666d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\n\ntype Props = {\n  todos: Todo[],\n  selctedUser: number,\n};\n\nenum Show {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selctedUser,\n}) => {\n  const [query, setQuery] = useState('');\n  const [showTodos, setShowTodos] = useState('');\n\n  const show = () => {\n    switch (showTodos) {\n      case Show.Active:\n        return todos.filter(todo => !todo.completed);\n      case Show.Completed:\n        return todos.filter(todo => todo.completed);\n      case Show.All:\n      default:\n        return todos;\n    }\n  };\n\n  const visibleTodos = show()\n    .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        data-cy=\"filterByTitle\"\n        type=\"text\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n\n      <select\n        value={showTodos}\n        onChange={(event) => setShowTodos(event.target.value)}\n      >\n        <option value={Show.All}>All</option>\n        <option value={Show.Active}>Active</option>\n        <option value={Show.Completed}>Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul data-cy=\"listOfTodos\" className=\"TodoList__list\">\n          {visibleTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames({\n                TodoList__item: true,\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <div>\n                <button\n                  data-cy=\"userButton\"\n                  onClick={() => dispatch(\n                    { type: 'SELECT_USER_ID', selectedUserId: todo.userId },\n                  )}\n                  className={classNames({\n                    'TodoList__user-button button': true,\n                    'TodoList__user-button--selected': todo.userId\n                      === selctedUser,\n                  })}\n                  type=\"button\"\n                >\n                  {`User #${todo.userId}`}\n                </button>\n                {' '}\n                <button\n                  onClick={() => dispatch(\n                    { type: 'DELETE_TODO', deleteTodoId: todo.id },\n                  )}\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst TODOS_LOADING = 'TODOS_LOADING';\nconst USER_LOADING = 'USER_LOADING';\nconst SELECT_USER_ID = 'SELECT_USER_ID';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const todosLoading = (todos: Todo[]) => ({\n  type: TODOS_LOADING,\n  todos,\n});\n\nexport const userLoading = (user: User | null) => ({\n  type: USER_LOADING,\n  user,\n});\n\nexport const selectUserId = (selectedUserId: number) => ({\n  type: SELECT_USER_ID,\n  selectedUserId,\n});\n\nexport const deleteTodo = (deleteTodoId: number) => ({\n  type: DELETE_TODO,\n  deleteTodoId,\n});\n\nexport const getTodosSelector = (state: RootState) => state.todos;\nexport const getUserSelector = (state: RootState) => state.user;\nexport const getUserIdSelector = (state: RootState) => state.selectedUserId;\n\nexport type RootState = {\n  todos: Todo[];\n  user: User | null;\n  selectedUserId: number;\n};\n\nconst initialState: RootState = {\n  todos: [],\n  user: null,\n  selectedUserId: 0,\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case TODOS_LOADING: {\n      return {\n        ...state,\n        todos: [...action.todos],\n      };\n    }\n\n    case USER_LOADING: {\n      return {\n        ...state,\n        user: action.user,\n      };\n    }\n\n    case SELECT_USER_ID: {\n      return {\n        ...state,\n        selectedUserId: action.selectedUserId,\n      };\n    }\n\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.deleteTodoId),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const URL = 'https://mate.academy/students-api';\n\nexport async function getTodos() {\n  const response = await fetch(`${URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(userId: number) {\n  const response = await fetch(`${URL}/users/${userId}`);\n\n  return response.json();\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../api';\nimport { getUserSelector } from '../../store';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId }) => {\n  const user = useSelector(getUserSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userFromServer = async () => {\n      dispatch({ type: 'USER_LOADING', user: await getUser(userId) });\n    };\n\n    userFromServer();\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${userId}`}</span></h2>\n\n      <h3 data-cy=\"userName\" className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      <button\n        onClick={() => dispatch({ type: 'SELECT_USER_ID', selectedUserId: 0 })}\n        type=\"button\"\n        className=\"CurrentUser__clear button\"\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\nimport { getTodosSelector, getUserIdSelector } from './store';\n\nconst App: React.FC = () => {\n  const selectedUserId = useSelector(getUserIdSelector);\n  const todos = useSelector(getTodosSelector);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const todosFromServer = async () => {\n      dispatch({ type: 'TODOS_LOADING', todos: await getTodos() });\n    };\n\n    todosFromServer();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selctedUser={selectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}